version: '3'

services:

  app_backend:
    container_name: manage_app_backend
    build:
      context: .
      dockerfile: ./dockerfiles/dockerfile.back
    ports:
      - 8000:8000
    networks:
      - manage-network
      # - internal
    # dns:
    #   - 8.8.8.8
    restart: "unless-stopped"
    env_file:
      - .env.dev
    
  app_frontend:
    container_name: manage_app_frontend
    build:
      context: .
      dockerfile: ./dockerfiles/dockerfile.front
    env_file:
      - .env.dev
    volumes:
      - ./config.yaml:/app/config.yaml
    ports:
      - 8502:8502
    networks:
      - manage-network 
      # - internal
    depends_on:
      - app_backend

  db:
    image: postgres:12.9
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - db_net
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

networks:
  db_net:
    driver: bridge
  manage-network:
    external: True

volumes:
  db_data:
